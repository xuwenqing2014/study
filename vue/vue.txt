1、生命周期
beforeCreate vue实例化之后，但实例中的data还不能访问
created  data可以访问
beforeMount 挂载dom之前
mounted 挂载dom之后，可以访问到dom了
beforeUpdate dom重新渲染之前
updated dom重新渲染之后
beforeDestory 组件销毁之前
destoryed 组件销毁之后
activited keep-alive 组件激活时
deactivited keep-alive 组件停用时
2、vuex
（1）触发事件dispatch action到action里
（2）在action里面处理异步，再commit到mutation中
（3）在mutation中根据type执行对应的代码，改变state的数据
（4）在组件中computed或者watch中监听state中的数据
3、父子组件生命周期
父组件beforecreate
父组件created
父组件beforemount
子组件beforecreate
子组件created
子组件beforemount
子组件mounted
父组件mounted
4、虚拟dom为什么快
虚拟dom其实是一个js对象，一种数据结构，对真实的dom做了一个映射，dom的操作是非常耗性能的，所以虚拟dom结合diff算法，
计算出最小的改变，然后再渲染到真实dom中，减少了真实dom的修改
5、v-for中的key是干嘛的
主要是为了给diff算法提供唯一标识，当列表中的元素有增删改查时，diff算法会根据前后变化计算出最小的改变，key值一样的dom可以复用，避免重新渲染
6、diff算法
diff算法时用来比较虚拟dom的，计算出最小的变化，vue中时patch.js，有一套对比规则....太多了记不住
7、mvc和mvvm的区别
mvvm是model数据模型、view视图、view-model数据视图，通过vm将view和model联系起来，view有操作，vm捕获到，然后更新model，如果model有改变，更新到view中
mvc是model数据模型、view视图、controller控制器，控制器直接将数据模型绑定到视图上，多了很多dom操作
8、渐进式
不需要一次性把所有东西都用上，需要用哪个，就安装哪个，一步一步来
9、Vue.nextTick()的原理
vue中数据变化时，会开启一个新的异步队列，用来缓冲数据，去除不必要的计算，优化性能，
而nextTick则是使用promise或者mutationObserver或者setTimeout（根据浏览器兼容性依次选用这三个中的一个）去添加到异步队列中，等待数据变化的异步队列执行完，再执行nextTick的回调函数
10、组件间的通讯
1）父子间通过props和emit去传递
2）层级较远，可以使用eventBus总线来实现，挂载到vue的prototype中
3）$parent、$children可以使用在父子组件中，特别时slot的父子组件，因为slot的父子组件无法使用props和emit
4）privide和inject用来注入数据，常用于组件开发
5）vuex
6）vue.observable用来管理小型数据
11、watch的原理
通过Object.defineProperty去劫持对象，当对象改变时，会调用set方法，在set方法中调用回调函数
12、computed的原理
